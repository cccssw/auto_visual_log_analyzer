/*---------------------------------------------------------------------

Template Name: 	Administry
Version:	 	1.0
Release Date: 	July 12, 2010

File:       	administry.js
Updated:    	2010-07-12

Copyright (c) 2010 Zoran Juric - http://themeforest.net/user/zoranjuric

-----------------------------------------------------------------------

WARNING! DO NOT EDIT THIS FILE UNLESS YOU KNOW WHAT YOU ARE DOING!

---------------------------------------------------------------------*/

// Preload images
imageObj = new Image();
imgs = ["img/toggle.gif", "img/nyro/ajaxLoader.gif", "img/nyro/prev.gif", "img/nyro/next.gif"];
for (i = 0; i <= imgs.length; i++) imageObj.src = imgs[i];

// Administry object setup
if (!Administry) var Administry = {}

// scrollToTop() - scroll window to the top
Administry.scrollToTop = function (e) {
    $(e).hide().removeAttr("href");
    if ($(window).scrollTop() != "0") {
        $(e).fadeIn("slow")
    }
    var scrollDiv = $(e);
    $(window).scroll(function () {
        if ($(window).scrollTop() == "0") {
            $(scrollDiv).fadeOut("slow")
        } else {
            $(scrollDiv).fadeIn("slow")
        }
    });
    $(e).click(function () {
        $("html, body").animate({
            scrollTop: 0
        }, "slow")
    })
}

// setup() - Administry init and setup
Administry.setup = function () {
    // Open an external link in a new window
    $('a[href^="http://"]').filter(function () {
        return this.hostname && this.hostname !== location.hostname;
    }).attr('target', '_blank');
	
    // build animated dropdown navigation
	$('#menu ul').supersubs({ 
		minWidth:    12,   // minimum width of sub-menus in em units 
		maxWidth:    27,   // maximum width of sub-menus in em units 
		extraWidth:  1     // extra width can ensure lines don't sometimes turn over 
						   // due to slight rounding differences and font-family 
	}).superfish(); 
	
    // build an animated footer
    $('#animated').each(function () {
        $(this).hover(function () {
            $(this).stop().animate({
                opacity: 0.9
            }, 400);
        }, function () {
            $(this).stop().animate({
                opacity: 0.0
            }, 200);
        });
    });

    // scroll to top on request
    if ($("a#totop").length) Administry.scrollToTop("a#totop");

    // setup content boxes
    if ($(".content-box").length) {
        $(".content-box header").css({
            "cursor": "s-resize"
        });
        // Give the header in content-box a different cursor	
        $(".content-box header").click(
        function () {
            $(this).parent().find('section').toggle(); // Toggle the content
            $(this).parent().toggleClass("content-box-closed"); // Toggle the class "content-box-closed" on the content
        });
    }
	
	// setup nyro popup window
	$.nyroModalSettings({
		debug: false,
		processHandler: function(settings) {
			var url = settings.url;
			if (url && url.indexOf('http://www.youtube.com/watch?v=') == 0) {
				$.nyroModalSettings({
					type: 'swf',
					height: 355,
					width: 425,
					url: url.replace(new RegExp("watch\\?v=", "i"), 'v/')
				});
			}
		},
		endShowContent: function(elts, settings) {
			$('.resizeLink', elts.contentWrapper).click(function(e) {
				e.preventDefault();
				$.nyroModalSettings({
					width: Math.random()*1000,
					height: Math.random()*1000
				});
				return false;
			});
			$('.bgLink', elts.contentWrapper).click(function(e) {
				e.preventDefault();
				$.nyroModalSettings({
					bgColor: '#'+parseInt(255*Math.random()).toString(16)+parseInt(255*Math.random()).toString(16)+parseInt(255*Math.random()).toString(16)
				});
				return false;
			});
		}
	});

	//Setup Plot
	if($(".myPlot").length){
		function weekendAreas(plotarea) {
			var areas = [];
			var d = new Date(plotarea.xmin);
			// go to the first Saturday
			d.setDate(d.getDate() - ((d.getDay() + 1) % 7))
			d.setSeconds(0);
			d.setMinutes(0);
			d.setHours(0);
			var i = d.getTime();
			do {
				areas.push({ x1: i, x2: i + 2 * 24 * 60 * 60 * 1000 });
				i += 7 * 24 * 60 * 60 * 1000;
			} while (i < plotarea.xmax);

			return areas;
		};
		var options = {
			lines: { show: true, lineWidth: 3 },
			points: { show: true },
			legend: { noColumns: 2, position: "se"/*, container: '#flot-legend'*/ },
			yaxis: { min: null, max: null },
			xaxis: { mode: "time", timeformat: "%y/%m/%d %H:%M", monthNames: ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十", "十一", "十二"] },
			selection: { mode: "x" },
			grid: { color: "#666", coloredAreas: weekendAreas, hoverable: true },
			colors: ["#E92424", "#75C5F0"]			
		};	
		$(".myPlot").each(function(){
			var me = this;
			var height = "300px";
			var dataType= $(me).attr("datatype");
			if(dataType == "pvipv"){
				height = "150px";
			}else if(dataType == "StatusCode"){
				height = "150px";
			}else if(dataType == "ftpMethod"){
				height = "220px";
			}
			$(me).css("height",height);
			
			//console.log(inner);
			var data = window[$(me).attr("data")];
			//var inner = $(me).parent(".plotChecks");
			var inner ="";
			$.each(data, function(key, val) {
				inner+='<input onclick="plotAccordingToChoices(this)" type="checkbox" name="' + key +
                               '" checked="checked" id="id' + key + '">' +
                               '<label for="id' + key + '">'
                                + val.label + '</label>';

			});
			$(me).parent().prepend('<div class="plotLineCheck"><div class="inner">'+inner+'</div><div style="clear:both"></div></div>');
			$.plot(me,data,options);
			$(me).bind("selected", function (event, area) {
				plot = $.plot(me, data,
					  $.extend(true, {}, options, {
						  xaxis: { min: area.x1, max: area.x2 }
					  }));
				//console.log($(me).parent().find(".ZoomOutBtn"));
				$(me).parent().find(".ZoomOutBtn").show();
			});
			(function (){
				$(me).parent().find(".ZoomOutBtn").click(function () {
					$.plot($(me), data, options);
					$(this).hide();
				});
			})();
			
		});

	};
	

	$(".pureTable").each(function(){
		var me = this;
		var data = window[$(me).attr("data").replace("window.","")];
		window.cntt = 0;
		var dt=$(me).dataTable({
			'aaData':data,
			'aLengthMenu':[[10,25,50,100,300,500,-1],[10,25,50,100,300,500,"所有"]],
			'sPaginationType':"full_numbers",
			"oLanguage": {
				"sLengthMenu": "每页显示 _MENU_ 条记录",
				"sZeroRecords": "找到0条数据",
				"sInfo": "显示从 _START_ 到 _END_ 条记录(总共: _TOTAL_ 条记录)",
				"sInfoEmpty": "没有数据",
				"sInfoFiltered": "(从 _MAX_ 条数据中过滤出来)",
				"sSearch":"搜索:",
				"sLoadingRecords":"正在载入数据...",
				"oPaginate":{
						"sFirst":"首页",
						"sPrevious":"<-",
						"sNext":"->",
						"sLast":"最后",
					}
			},
			'aoColumnDefs':[
				{
					'fnRender':function(oObj){						
						if($.trim(oObj.oSettings.aoColumns[0].sTitle) == 'IP'){
							return "<a class='ipItem' onClick='JumpTo(this)'>"+oObj.aData[0]+"</a>";
						}else{
							return oObj.aData[0];
						}
					},
					'aTargets':[0]
				}
			]
		});
		if(window.pureTable == undefined)
			window.pureTable = {};
		
		var theid = $(me).attr("id");
		window.pureTable['id'+theid] =dt;
	});


	//setup html SecTable
	if($(".SecTable").length){
		$(".SecTable").dataTable({
			'aLengthMenu':[[10,25,50,100,300,500,-1],[10,25,50,100,300,500,"所有"]],
			'sPaginationType':"full_numbers",
			"oLanguage": {
					"sLengthMenu": "每页显示 _MENU_ 条记录",
					"sZeroRecords": "找到0条数据",
					"sInfo": "显示从 _START_ 到 _END_ 条记录(总共: _TOTAL_ 条记录)",
					"sInfoEmpty": "没有数据",
					"sInfoFiltered": "(从 _MAX_ 条数据中过滤出来)",
					"sSearch":"搜索:",
					"sLoadingRecords":"正在载入数据...",
					"oPaginate":{
						"sFirst":"首页",
						"sPrevious":"<-",
						"sNext":"->",
						"sLast":"最后",
					},
					
				},
			'aoColumnDefs':[
				{
					'fnRender':function(oObj){						
						if($.trim(oObj.oSettings.aoColumns[0].sTitle) == 'IP'){
							return "<a class='ipItem' onClick='JumpTo(this)'>"+oObj.aData[0]+"</a>";
						}else{
							return oObj.aData[0];
						}
					},
					'aTargets':[0]
				}
			]
		});
	};
	//setup secDataTable
	if($(".secDataTable").length){
		 $(".secDataTable h4").css({
            "cursor": "s-resize"
        });
		$(".secDataTable h4").click(
        function () {
            $(this).parent().find('.secDataTableContent').first().toggle(); // Toggle the content
            $(this).parent().toggleClass("secDataTable-closed"); // Toggle the class "content-box-closed" on the content
        });
		$(".secDataTable h3").css({
            "cursor": "s-resize"
        });
		$(".secDataTable h3").click(
        function () {
            $(this).parent().find('.secDataTableContent').first().toggle(); // Toggle the content
            $(this).parent().toggleClass("secDataTable-closed"); // Toggle the class "content-box-closed" on the content
        });
	};
	//Setup piePlot
	$(".dataBind").each(function(){
		var me = this;
		var pdata = window[$(me).attr("data").replace("window.","")];
		if(pdata.length == 0)
			return;
		if($(me).attr("datatype")== "piePlot"){
			var nextHeight = $(me).parent().next().css("height");
			var prevHeight = $(me).parent().prev().css("height");
			var height = 220;
			if(nextHeight != undefined && parseInt(nextHeight.replace("px",""))>height){
				height = nextHeight;
			}else if(prevHeight!= undefined && parseInt(prevHeight.replace("px",""))>height){
				height = prevHeight;
			}else{
				height ="220px";
			}
			$(me).css("height",height);
			for(var i = 0;i<pdata.length;i++)
			{
				pdata[i]["data"] = parseInt(pdata[i]["data"]);
			}
			$.plot($(me), pdata,{
				series: {
					pie: { 
						show: true,
						label: {
							show: true,
							formatter: function(label, slice){
								return '<div style="font-size:x-small;text-align:center;padding:2px;color:'+slice.color+';">'+label+'('+slice.data[0][1]+')'+'<br/>'+Math.round(slice.percent)+'%</div>';
						},	// formatter function
						radius: 1,	// radius at which to place the labels (based on full calculated radius if <=1, or hard pixel value)
						background: {
							color: null,
							opacity: 0
						},
						threshold: 0	// percentage at which to hide the label (i.e. the slice is too narrow)
					},
					}
				},
				legend: {
					show: false
				}
			});
		}
	});

var TRange=null;
function findString (str) {
 if (parseInt(navigator.appVersion)<4) return;
 var strFound;
 if (window.find) {

  // CODE FOR BROWSERS THAT SUPPORT window.find

  strFound=self.find(str);
  if (!strFound) {
   strFound=self.find(str,0,1);
   while (self.find(str,0,1)) continue;
  }
 }
 else if (navigator.appName.indexOf("Microsoft")!=-1) {

  // EXPLORER-SPECIFIC CODE

  if (TRange!=null) {
   TRange.collapse(false);
   strFound=TRange.findText(str);
   if (strFound) TRange.select();
  }
  if (TRange==null || strFound==0) {
   TRange=self.document.body.createTextRange();
   strFound=TRange.findText(str);
   if (strFound) TRange.select();
  }
 }
 else if (navigator.appName=="Opera") {
  alert ("Opera browsers not supported, sorry...")
  return;
 }
 if (!strFound) alert ("没有找到 '"+str+"' !")
 return;
}
	//Setup inner Research
	$("#queryBtn").click(function(){
		console.log($("#query").val());
		findString($("#query").val());
		/*
		var res =  window.find($("#query").val(),0,0,0,0,0,1);
		console.log(res);
		if(res){
			$("#query").removeClass("unfind");
			$("#query").addClass("finded");
		}else{
			$("#query").removeClass("finded");
			$("#query").addClass("unfind");
		}
		*/
	});

	$("#toSearchGeo").click(function(event){
		SearchGeo(this);
		event.preventDefault();
	});

	if($("#geo").length){
		var actZone = $("#geo").parent().find(".secDataTableContent");
		actZone.prepend("<div style='margin-top:-31px;'><div style='float:right;'>读取:<a title='时间可能较长,网络状况好时,平均1.5秒读取一个IP的地理信息' style='cursor:pointer' class='btn' onClick='javascript:LoadAllGeo(this)'>所有IP</a><a title='时间可能较长,网络状况好时,平均1.5秒读取一个IP的地理信息' style='cursor:pointer' class='btn' onClick='javascript:LoadOnePageGeo(this)'>当前页</a>的地理信息</div><img id='geoLoading' title='正在读取' style='display:none;width:30px;margin-right:5px;float:right;' src='./img/nyro/ajaxLoader.gif' alt='正在读取'/><div style='float:right;margin-right:10px;display:none;' id='progressGeo' class='progress width2 progress-blue'><span><b></b></span></div></div>");
		var table = $("#geo").parent().find("table");
		/*
		table.find("tr td:first-child").each(function(){
			var list = [];
			var ip = $(this).text();
			console.log(ip);

		});
		var tableID = table.attr("id");
		var initedTable= window["pureTable"]["id"+tableID];
		initedTable.fnDestroy();
		//console.log(table.find("tr td:first-child"));
		
		table.find("tr td:first-child").each(function(){
				$(this).live('click',function(){
					console.log("sss");
				});
		});
		*/
	};

	if($("#rightmenu").length){
		function scrollTop(){
			return document.body.scrollTop||document.documentElement.scrollTop;
		}
		var menu = $("#rightmenu");
		var init = menu.offset().top;
		var docked;
		$(window).scroll(function(){
			if(!docked && (menu.offset().top - scrollTop()<0) ){
				menu.css("top","-20px");
				menu.css("position","fixed");
				menu.addClass("docked");
				docked = true;
			}else if (docked && scrollTop() <= init){
				menu.css("position","initial");
				menu.css("top","0px");
				menu.removeClass("docked");
				docked=false;
			}
		});
	};
	
	if($("td.ta-right>ul").length){
		var ctx = $("td.ta-right>ul");
		var arr = ctx.find("li");
		var cnt = arr.length;
		if(cnt > 5){
			ctx.wrapAll("<div style='display:none;' id='machineList'></div>");
			$("#machineList").before("<a open='false' style='cursor:pointer' onClick='javascript:OpenMachineList(this);'>打开列表(共"+cnt+"项)</a>");
		}
	}
	
	// custom tooltips to replace the default browser tooltips for <a title=""> <div title=""> and <span title="">
    $("a[title], div[title], span[title] , img[title]").tipTip();
	
}

// progress() - animate a progress bar "el" to the value "val"
Administry.progress = function (el, val, max) {
    var duration = 400;
    var span = $(el).find("span");
    var b = $(el).find("b");
    var w = Math.round((val / max) * 100);
    $(b).fadeOut('fast');
    $(span).animate({
        width: w + '%'
    }, duration, function () {
        $(el).attr("value", val);
        $(b).text(w + '%').fadeIn('fast');
    });
}

// videoSupport() - <video> tag support for older browsers through flash player embedding
Administry.videoSupport = function (wrapper, videoURL, width, height) {
    var v = document.createElement("video"); // Are we dealing with a browser that supports <video> tag? 
    if (!v.play) { // If no, use Flash.
        var vobj = $('#' + wrapper).find('video');
        var poster = $(vobj).attr("poster");
        var params = {
            allowfullscreen: "true",
            allowscriptaccess: "always"
        };
        var flashvars = {
            file: videoURL,
            image: poster
        };
        swfobject.embedSWF("player.swf", wrapper, width, height, "9.0.0", "expressInstall.swf", flashvars, params);
    }
}

// expandableRows() - expandable table rows
Administry.expandableRows = function () {
    var titles_total = $('td.title').length;
    if (titles_total) { /* setting z-index for IE7 */
        $('td.title').each(function (i, e) {
            $(e).children('div').css('z-index', String(titles_total - i));
        });

        $('td.title').find('a').click(function () {
            // hide previously opened containers
            $('.opened').hide();
            // remove highlighted class from rows
            $('td.highlighted').removeClass('highlighted');

            // locate the row we clicked onto
            var tr = $(this).parents("tr");
            var div = $(this).parent().find('.listingDetails');

            if (!$(div).hasClass('opened')) {
                $(div).addClass('opened').width($(tr).width() - 2).show();
                $(tr).find('td').addClass('highlighted');
            } else {
                $(div).removeClass('opened');
                $(tr).find('td').removeClass('highlighted');
            }
            return false;
        });
    }
}
function plotAccordingToChoices(val){
	function weekendAreas(plotarea) {
			var areas = [];
			var d = new Date(plotarea.xmin);
			// go to the first Saturday
			d.setDate(d.getDate() - ((d.getDay() + 1) % 7))
			d.setSeconds(0);
			d.setMinutes(0);
			d.setHours(0);
			var i = d.getTime();
			do {
				areas.push({ x1: i, x2: i + 2 * 24 * 60 * 60 * 1000 });
				i += 7 * 24 * 60 * 60 * 1000;
			} while (i < plotarea.xmax);

			return areas;
	};
	var options = {
		lines: { show: true, lineWidth: 3 },
		points: { show: true },
		legend: { noColumns: 2, position: "se"/*, container: '#flot-legend'*/ },
		yaxis: { min: null, max: null },
		xaxis: { mode: "time", timeformat: "%y/%m/%d %H:%M", monthNames: ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十", "十一", "十二"] },
		selection: { mode: "x" },
		grid: { color: "#666", coloredAreas: weekendAreas, hoverable: true },
		colors: ["#E92424", "#75C5F0"]			
	};	
	var data = [];
	var me = $(val).parent().parent().parent().find(".myPlot");
	var datasets = window[$(me).attr("data")];
	$(val).parent().find("input:checked").each(function () {
            var key = $(this).attr("name");
            if (key && datasets[key])
                data.push(datasets[key]);
        });
	if (data.length > 0){
			$.plot(me,data,options);
			$(me).unbind("selected");
			$(me).bind("selected", function (event, area) {
				plot = $.plot(me, data,
					  $.extend(true, {}, options, {
						  xaxis: { min: area.x1, max: area.x2 }
					  }));
				//console.log($(me).parent().find(".ZoomOutBtn"));
				$(me).parent().find(".ZoomOutBtn").show();
			});
			$(me).parent().find(".ZoomOutBtn").unbind("click");
			(function (){				
				$(me).parent().find(".ZoomOutBtn").click(function () {
					$.plot($(me), data, options);
					$(this).hide();
				});
			})();
	}
	//console.log(me);
}
function CloseAll(){
	$(".secDataTable h4").each(function(){
		$(this).parent().find('.secDataTableContent').first().hide();
		$(this).parent().addClass("secDataTable-closed");
	});
	$(".secDataTable h3").each(function(){
		$(this).parent().find('.secDataTableContent').first().hide();
		$(this).parent().addClass("secDataTable-closed");
	});
}
function OpenAll(){	
	$(".secDataTable h3").each(function(){
		$(this).parent().find('.secDataTableContent').first().show();
		$(this).parent().removeClass("secDataTable-closed");
	});
	$(".secDataTable h4").each(function(){
			$(this).parent().find('.secDataTableContent').first().show();
			$(this).parent().removeClass("secDataTable-closed");
		});
}
function SearchGeo(val){
	var img ="<p><b>地图:</b><a href='http://maps.google.com/maps?q=#lat#,#lng#&ll=#lat#,#lng#' target='_blank'><img src='http://maps.googleapis.com/maps/api/staticmap?center=#lat#,#lng#&zoom=#zoom#&size=50x50&sensor=false'/></a></p>";
	var display = $(val).parent().parent().next();
	var ip = $(val).parent().parent().find("input").val();
	var labels = {"ip":"IP","city":"邮政编码","city_name":"市","province_name":"省","more":"详情","country":"国"}

	if(!IsIPv4(ip))
	{
		alert("IP地址格式不正确!");
		return;
	}
	$("#gloading").show();
	FireGeoRemote("geoSearch",ip,function(){
		$("#gloading").hide();
		var resdis= $("#geoResult");
		resdis.empty();
		if(window.geoSearch != undefined && window.geoSearch.geos.length>0){
			var geos = window.geoSearch.geos;
			for(var i=0;i<geos.length;i++){
				var ditu = {"latitude":"0","longitude":"118"};
				for(var p in geos[i]){
					if(labels[p] !=undefined)
					resdis.prepend("<p><b>"+labels[p]+":</b>"+"<span>"+geos[i][p]+"</span></p>");
					if(ditu[p] !=undefined)
						ditu[p] = geos[i][p];
				}
				var insert = replaceAll(img,"#lat#",ditu["latitude"]);
				insert = replaceAll(insert,"#lng#",ditu["longitude"]);
				insert = replaceAll(insert,"#zoom#",10);
				resdis.append(insert);
			}
		}
	});
}
function replaceAll(txt,replace,with_this){
	return txt.replace(new RegExp(replace,'g'),with_this);
}
function IsIPv4(str){
	var patrn = /((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)/;
	if(!patrn.exec(str)) return false
	return true;
}
function FireGeoRemote(varname,ip,done){	
	var  apiUrl = "http://applex.sinaapp.com/api/geoJs.php?var=#&ip=$";
	var url = apiUrl.replace("$",ip).replace("#",varname);
	$.getScript(url,done);
}
function LoadAllGeo(val){
	var table = $(val).parent().parent().parent().find("table");
	LoadGeoData(table,table.attr("data").replace("window.",""),null);
}
function LoadOnePageGeo(val){
	var table = $(val).parent().parent().parent().find("table");
	var list = [];
	table.find("tr td:first-child").each(function(){
		list.push($(this).text());
	});
	LoadGeoData(table,table.attr("data").replace("window.",""),list);

}
function LoadSingleGeo(val,table){
	var list = [];
	list.push(val.text);
	LoadGeoData(table,table.attr("data").replace("window.",""),list);
}
//if iplist=null then loadall
function LoadGeoData(table,data,iplist){
	//console.log(table);
	var tableID = table.attr("id");
	var initedTable= window["pureTable"]["id"+tableID];	
	//console.log(tableID);
	var img ="<a href='http://maps.google.com/maps?q=#lat#,#lng#&ll=#lat#,#lng#' target='_blank'><img src='http://maps.googleapis.com/maps/api/staticmap?center=#lat#,#lng#&zoom=10&size=50x50&sensor=false'/></a>";
	$("#progressGeo").show();
	var dt = window[data];
	if(iplist==null){
		iplist = [];
		for(var x in dt){
			iplist.push(dt[x][0]);
		}
	}
	var length = dt.length;
	$("#progressGeo").attr("finish",0);
	if(window.loaded == undefined||window.loaded==null)
		window.loaded = new Array();
	Administry.progress("#progressGeo",window.loaded.length,length);
	var loadedip = new Array();
	for(var t in window.loaded){
		loadedip.push(window.loaded[t][0]);
	}
	$("#geoLoading").show();
	for(var i in dt){
		(function(){
			var ip = dt[i][0];
			var n =i;
			if(dt[i][1] =="" && ($.inArray(ip,loadedip)<0) && ($.inArray(ip,iplist)>=0)){
				FireGeoRemote("geoTable"+n,ip,function(){
					if(window.loaded == null)
						return;
					var num = $("#progressGeo").attr("finish");
					num++;
					$("#progressGeo").attr("finish",num);
					Administry.progress("#progressGeo",num,length);
					var varname = "geoTable"+n;
					var json = window[varname];
					var item = new Array();
					if( json.geos!=undefined && json.geos.length>0){
						var content = json.geos[0];
						item.push(ip);
						if(content['country']!=undefined){
							item.push(content['country']);
						}else{
							item.push("");
						}
						if(content['province_name']!=undefined){
							item.push(content['province_name']);
						}else{
							item.push("");
						}
						if(content['city_name']!=undefined){
							item.push(content['city_name']);
						}else{
							item.push("");
						}
						if(content['more']!=undefined){
							item.push(content['more']);
						}else{
							item.push("");
						}
						if(content['latitude']!=undefined && content['longitude']!=undefined){
							var insert = replaceAll(img,"#lat#",content['latitude']);
							insert = replaceAll(insert,"#lng#",content['longitude']);
							item.push(insert);
						}else{
							item.push("");
						}
						window.loaded.push(item);
					}else{
						window.loaded.push(dt[n]);
					}
					if(num == length){
						window[data] = window.loaded;
						renderGeo(tableID,initedTable);
						$("#progressGeo").hide();
						window.loaded = null;
						Administry.progress("#progressGeo",0,length);
						$("#geoLoading").hide();
					}
				});
			}else{
				if($.inArray(ip,loadedip)<0)
					window.loaded.push(dt[i]);
				var num = $("#progressGeo").attr("finish");
				num++;
				$("#progressGeo").attr("finish",num);
				if(num ==length){
					window[data] = window.loaded;
					renderGeo(tableID,initedTable);
					$("#progressGeo").hide();
					window.loaded = null;
					Administry.progress("#progressGeo",0,length);
					$("#geoLoading").hide();
				}
			}
		})();
	}
}

function renderGeo(tableID,initedTable){
	initedTable.fnClearTable();
	initedTable.fnAddData(window.loaded);
}

function JumpTo(val){
	var sec = $(val).closest(".secDataTable");
	var table = $(val).closest("table");
	var thisid = sec.children().first().attr("id");
	if(thisid == "geo"){
		LoadSingleGeo(val,table);
	}else if(thisid == "safeAll"){
		var oGo = $(val).parent().next().children("b");
		if(oGo == undefined || oGo.length==0)
			return;
		fnFilterRecords(val.text,oGo.text());
		fnJumptoHover(oGo.text());
	}else{
		fnJumptoHover("geo");
		fnFilterRecords(val.text,"geo");
		fnJumptoHover("geo");
	}
}
function fnFilterRecords(ip,goid){
	var table = $('#'+goid).parent().find("table");
	var tableID = table.attr("id");
	fnFilterTableIP(tableID,ip);
}
function fnFilterTableIP(tableid,ip){
	var initedTable= window["pureTable"]["id"+tableid];
	if(initedTable != undefined)
		initedTable.fnFilter(ip);
}
function fnJumptoHover(id){
	var new_position = $('#'+id).offset();
	if(new_position.left && new_position.top)
		window.scrollTo(new_position.left,new_position.top);
}

function OpenMachineList(val){
	var me=$(val);
	if(me.attr("open")=="false"){
		me.text(me.text().replace("打开","关闭"));
		me.attr("open","true");
	}else{
		me.text(me.text().replace("关闭","打开"));
		me.attr("open","false");
	}
	$("#machineList").toggle();
}